.. _gen_inlines:

GEN_INLINES: утилита для формирование TODO, Костыли и прочее
============================================================

Обрабатывает файл(ы) с исходниками (не обязательно, вообще говоря - любые текстовые файлы)
и выдирает из них заданные параметром фрагменты
исходного кода (справа от параметра и до конца строки).

Формирует файл, содержащий

- текст (описание - что именно было справа от параметра)
- номер строки в исходном файле (для того, чтобы можно было найти)

Синтаксис очень прост - в исходном файле ищется фрагмент вида <решетка>параметр<двоеточие>. Все справа от найденного фрагмента
считается описанием и попадает в результирующий файл.

Примеры использования - формирование файлов с TODO и Костыдями в документации.

<<Зависимости>>=

import argparse
import os

<<*doWork|type=function>>=
Главная и единственная функция, которая все и делает
<--->

    <<GEN_INLINES:Разбор командной строки>>

    mTag = "#{0}:".format(args.tag)

    resStr = ""
    for fl in args.files:	# в цикле по всем файлам
        lNo = 1
        mComms = []
        try:
            f = open( fl, "rt" )
        except:
            print ( "Не получается открыть исходный фqайл {0}".format(fl) )
            return
        for ln in f:		# перебираем строки файла
            ln = ln.strip()
            if ln.find(mTag)>=0: 	# в строке есть нужный комментарий
                mComms.append([ln.split(mTag)[1], lNo])	# пара (текст, номер строки)
            lNo += 1
        if len(mComms)>0:
            resStr += fl + ":\n"
            resStr += "-"*(len(fl)+1) + "\n\n"
            for l in mComms:
                resStr += "- {0} ``/строка {1}/``\n".format(*l)
            resStr += "\n"

    if len(resStr)==0:	# тэг не найден - выведем в файл стандартный текст
        resStr = "Мета тэг {0} в файлах проекта не найден".format(args.tag)
        
    of = open ( args.ofile, "w" )
    of.write(resStr)
    of.close()

doWork()
    
@
#<algorithms.inlines

<<GEN_INLINES:Разбор командной строки>>==
Параметры запуска утилиты
<--->
parser = argparse.ArgumentParser(description='Формирует фрагмент файла с инлайн мета комментариями')
parser.add_argument('-o','--ofile', help='имя файла результата')
parser.add_argument('-t','--tag', help='мета тэг')
parser.add_argument('files', metavar='file', nargs='+', help='исходники')
args = parser.parse_args()
    
@
#>algorithms.inlines
                
